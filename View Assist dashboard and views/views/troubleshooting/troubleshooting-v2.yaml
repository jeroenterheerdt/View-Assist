type: custom:button-card
variables:
  var_group: group.viewassist_satellites
name: Troubleshooting (v2)
template:
  - variable_template
  - body_template
styles:
  custom_fields:
    title:
      - padding: 0.2vh
      - font-size: 3.1vh
      - font-weight: bold
    default_satellite:
      - padding: 0.5vh
      - font-size: 2.13vh
      - line-height: 2.9vh
      - position: absolute
      - top: 5%
  grid:
    - grid-template-areas: |
        "title status" 
        "default_satellite default_satellite"
        "assist assist"
    - grid-template-rows: min-content min-content min-content min-content
    - grid-template-columns: 1fr 1fr
  card:
    - background: >-
        [[[ return `center / cover no-repeat url(${variables.var_background})`
        ]]]
    - background-size: cover
custom_fields:
  title: Troubleshooting (v2)
  default_satellite: |
    [[[ 
      try {
        if (!states[variables.var_group]) {
          return 'Error: ${variables.var_group} not found';
        }
        let assistGroup = states[variables.var_group].attributes.entity_id;
        if (!assistGroup) {
          return 'Error: assist_group entity_id not found';
        }
        let defaultSatellite = assistGroup.find(eid => states[eid].attributes.type === "view_audio");
        let browserModId = localStorage.getItem("browser_mod-browser-id");
        if (!browserModId) {
          return 'Error: browser_mod-browser-id not found';
        }
        let satellite = assistGroup.find(eid => states[eid]?.attributes?.browser_id === browserModId) ?? defaultSatellite;
        let attrs = Object.entries(states[satellite].attributes);
        return `<div style="text-align: left;">satellite: ${satellite}<br/>` + 
               attrs.map(([key, value]) => `${key}: ${value}`).join('<br>') + 
               `</div>`;
      } catch (e) { 
        return 'Error: ' + e.message;
      }
    ]]]
